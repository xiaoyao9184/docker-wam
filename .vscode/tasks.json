{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "docker: compose up.label@gpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.label@gpu/"
            },
            "command": "docker compose -p watermark-anything up"
        },
        {
            "label": "docker: compose up.gradio@gpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.gradio@gpu/"
            },
            "command": "docker compose -p watermark-anything up"
        },
        {
            "label": "docker: compose up.gradio@cpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.gradio@cpu/"
            },
            "command": "docker compose -p watermark-anything up"
        },
        {
            "label": "docker: compose up.streamlit@gpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.streamlit@gpu/"
            },
            "command": "docker compose -p watermark-anything up"
        },
        {
            "label": "docker: compose up.streamlit@cpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up.streamlit@cpu/"
            },
            "command": "docker compose -p watermark-anything up"
        },
        {
            "label": "docker: compose up@gpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up@gpu/"
            },
            "command": "docker compose -p watermark-anything up"
        },
        {
            "label": "docker: compose up@cpu",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/docker/up@cpu/"
            },
            "command": "docker compose -p watermark-anything up"
        },
        {
            "label": "docker: build main",
            "type": "shell",
            "command": "docker build -t xiaoyao9184/watermark-anything:main -f ./docker/build@source/dockerfile ."
        },
        {
            "label": "conda: pytest label-studio-ml",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/",
                "env": {
                    // "LABEL_STUDIO_URL": "http://localhost:8080",
                    // "LABEL_STUDIO_API_KEY": "<your-label-studio-api-key>",
                    // "HF_ENDPOINT": "https://hf-mirror.com",
                    // "HF_HUB_ETAG_TIMEOUT": "1000",
                    // "HF_HUB_DOWNLOAD_TIMEOUT": "1000",
                    "XDG_CACHE_HOME": "${workspaceFolder}/cache"
                }
            },
            "command": [
                "conda run -n watermark_anything pytest ${workspaceFolder}/label/test_api.py"
            ],
            "problemMatcher": []
        },
        {
            "label": "conda: label-studio-ml start",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/",
                "env": {
                    // "LABEL_STUDIO_URL": "http://localhost:8080",
                    // "LABEL_STUDIO_API_KEY": "<your-label-studio-api-key>",
                    // "HF_ENDPOINT": "https://hf-mirror.com",
                    // "HF_HUB_ETAG_TIMEOUT": "1000",
                    // "HF_HUB_DOWNLOAD_TIMEOUT": "1000",
                    "XDG_CACHE_HOME": "${workspaceFolder}/cache"
                }
            },
            "command": [
                "conda run --no-capture-output -n watermark_anything label-studio-ml start --root-dir ${workspaceFolder} label"
            ],
            "problemMatcher": []
        },
        {
            "label": "conda: run watermark-anything gradio",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/gradio",
                "env": {
                    "APP_PATH": "${workspaceFolder}/watermark-anything",
                }
            },
            "command": [
                "conda run --no-capture-output -n watermark_anything python gradio_app.py"
            ],
            "problemMatcher": []
        },
        {
            "label": "conda: run watermark-anything streamlit",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/streamlit",
                "env": {
                    "STREAMLIT_SERVER_PORT": "8501",
                    "APP_PATH": "${workspaceFolder}/watermark-anything"
                }
            },
            "command": [
                "conda run --no-capture-output -n watermark_anything streamlit run streamlit_app.py"
            ],
            "problemMatcher": []
        },
        {
            "label": "huggingface-cli: download models",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    // "HF_ENDPOINT": "https://hf-mirror.com",
                    // "HF_HUB_ETAG_TIMEOUT": "1000",
                    // "HF_HUB_DOWNLOAD_TIMEOUT": "1000"
                }
            },
            "command": "huggingface-cli download --revision main --cache-dir ./cache/huggingface/hub --local-dir ./watermark-anything/checkpoints facebook/watermark-anything checkpoint.pth"
        },
        // no need, use facebook/watermark-anything
        // {
        //     "label": "huggingface-cli: upload models",
        //     "type": "shell",
        //     "command": "huggingface-cli upload --repo-type model --revision main xiaoyao9184/watermark-anything ${workspaceFolder}/watermark-anything/checkpoints/checkpoint.pth",
        // },
        {
            "label": "conda: jupyter run inference notebook",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/watermark-anything",
            },
            "command": [
                "conda run --no-capture-output -n watermark_anything jupyter notebook ./notebooks/inference.ipynb"
            ],
            "problemMatcher": []
        },
        {
            "label": "conda: wget download wam_mit models checkpoint",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/watermark-anything"
            },
            "command": [
                "conda run --no-capture-output -n watermark_anything python -m wget https://dl.fbaipublicfiles.com/watermark_anything/wam_mit.pth -o ./checkpoints/wam_mit.pth",
                "&& mv ./checkpoints/wam_mit.pth ./checkpoints/checkpoint.pth"
            ]
        },
        {
            "label": "conda: wget download wam_coco models checkpoint",
            "type": "shell",
            "options": {
                "cwd": "${workspaceFolder}/watermark-anything"
            },
            "command": [
                "conda run --no-capture-output -n watermark_anything python -m wget https://dl.fbaipublicfiles.com/watermark_anything/wam_coco.pth -o ./checkpoints/wam_coco.pth",
                "&& mv ./checkpoints/wam_coco.pth ./checkpoints/checkpoint.pth"
            ]
        },
        {
            "label": "conda: create env",
            "type": "shell",
            "command": [
                "conda env create -f ./environment.yml"
            ]
        }
    ]
}